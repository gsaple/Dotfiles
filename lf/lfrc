# OPTIONS
set shell sh
set shellopts '-eu'
set ifs "\n"
set hidden
set icons
set truncatechar ''
set promptfmt "\033[33;1m  %d\033[0m"
set cursorpreviewfmt "\033[7m"
set ratios '5:5'
set scrolloff 10
set wrapscroll
set incsearch
set autoquit
set relativenumber
set numberfmt "\033[38;2;94;81;70m"
set previewer '~/.config/lf/preview'
set cleaner '~/.config/lf/cleanerpp'

# COMMANDS
# move current file or selected files to trash folder
cmd trash ${{
    set -f
    readarray -t filenames <<< "$fx"
    for file in "${filenames[@]}"; do
        #mv "$file" "$HOME/.local/share/Trash/files/$(basename $file)_$(date +'%Y%m%d%H%M%S')"
        kioclient move $file trash:/
    done
}}

# delete file(s)
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete? [y/n] "
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

# copy file name
cmd copy_name ${{
    base_name=$(basename "$f")
    echo -n "$base_name" | xclip -selection clipboard
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# Integrate eza
cmd on-select &{{
    lf -remote "send $id set statfmt \"$(eza -ld --color=always "$f")\""
}}

# open current file
# '--' indicate the end of command line options i.e. only args after --, no more options
# setsid is to run program in a new session, detach the process from the terminal or shell
cmd open ${{
    # file name
    FN=$(printf "%s\n" "$(readlink -f "$f")" | awk '{print tolower($0)}')
    # mime type
    MT=$(file --dereference --brief --mime-type -- "$f")

    case "$MT" in
        application/zip | application/gzip | application/java-archive |  application/x-xz | application/x-bzip2)
            case "$FN" in
                *.zip) unzip $f ;;
                *.tar.gz) tar xzvf $f ;;
                *.tar.xz) tar xvf $f ;;
                *.tar.bz2) tar xjvf $f ;;
            esac
            ;;
        application/pdf) setsid -f zathura $f >/dev/null 2>&1 ;;
        text/troff) man -l $f ;;
        text/*) $EDITOR $fx ;;
        #image/svg+xml) setsid -f display $f >/dev/null 2>&1 ;;
        image/svg+xml) ;; # do nothing
        image/*) setsid -f sxiv $f >/dev/null 2>&1 ;;
        video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
        *) lf -remote "send $id echo nothing setup to open mime: $MT" ;;
    esac
}}

# create new directory and new file
cmd new_dir $mkdir -p "$(echo $* | tr ' ' '\ ')"
cmd new_file $touch "$(echo $* | tr ' ' '\ ')"

# KEY BINDINGS
map . set hidden! # toggle dot file
map D trash # move to trash
map <delete> delete # delete the file permanently
map S :set info size; calcdirsize # calculate dir size
map R rename # normal rename
map <c-c> copy_name # copy base name
map C push R<c-u> # change all
map r push R<a-b><c-b><c-u> # change file name if there is an extension
map A push R<a-b><c-k> # change extension name if there an extension
map B $vidir $fx # bluk rename files
map f :set globsearch;filter # start filter
map F :set noglobsearch; setfilter # end filter
map <c-d> push :new_dir<space> # new directory
map <c-f> push :new_file<space> # new file
map <c-t> push :tar<space> # compress using tar
map <c-z> push :zip<space> # compress using zip
map Y $printf "%s" "$fx" | xclip -selection clipboard # copy file names
map <c-_> $chmod +x $f;
map <c-x> push <c-_><c-r> # make file executable
map P :set preview!; $exit # toggle preview
cmap <c-l> :cmd-enter; open

# TODO:change dir e.g. map gh cd ~
map gd cd ~/Downloads

